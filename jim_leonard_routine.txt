Happy to help.  When the documentation says "timer ticks", it means ticks of the actual PIT timer, not the memory variable that updates the system timer which only progresses 18.2 times a second.  The PIT counts down at 1193182 ticks a second.  It only has a 16-bit size (0-65535) so you can only observe that value counting down.  It counts from 65535-0 18.2 times a second (and now you know where the 18.2 Hz of the system clock tick comes from).

Here is working code that initializes uses the PIT to do the correct timing, then continues initializing (it's not complete code, but it shows you how the PIT reading is done):

                cli                             ;disable interrupts
                mov     al,0                    ;reprogram timer
                out     43h,al                  ;timer-0 count-mode
                in      al,40h                  ;read low-byte count
                mov     bl,al                   ;save in BL
                in      al,40h                  ;read high-byte count
                mov     bh,al                   ;save in BH
@@:
                mov     al,0                    ;reprogram timer
                out     43h,al                  ;timer-0 count-mode
                in      al,40h                  ;read low-byte count
                mov     cl,al                   ;save in CL
                in      al,40h                  ;read high-byte count
                mov     ch,al                   ;save in CH
                neg     cx
                add     cx,bx                   ;compute clocks gone by
                cmp     cx,2386
                jb      @b

                mov     ax,(b8*al$fnumh)+20h    ;key-on  0B020h
                call    adlout
if ft$adl
                mov     ax,(b8*(al$fnumh+1))+20h    ;key-on  0B020h
                call    adlout
endif
                mov     ax,(b8*al$fnuml)+00h    ;freq-numL  0A000h
                call    adlout
if ft$adl
                mov     ax,(b8*(al$fnuml+1))+00h    ;freq-numL  0A000h
                call    adlout
endif
                sti                             ;reenable interrupts

Hope that helps!
--
Blog: http://trixter.oldskool.org/
Demos! http://www.mindcandydvd.com/
